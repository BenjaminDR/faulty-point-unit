diff --git a/samples/helloworld/enclave/enc.c b/samples/helloworld/enclave/enc.c
index f6e42c73d..833e97081 100644
--- a/samples/helloworld/enclave/enc.c
+++ b/samples/helloworld/enclave/enc.c
@@ -2,6 +2,7 @@
 // Licensed under the MIT License.
 
 #include <stdio.h>
+#include <stdint.h>
 
 // Include the trusted helloworld header that is generated
 // during the build. This file is generated by calling the
@@ -11,23 +12,18 @@
 // This is the function that the host calls. It prints
 // a message in the enclave before calling back out to
 // the host to print a message from there too.
-void enclave_helloworld()
+double enclave_helloworld()
 {
-    // Print a message from the enclave. Note that this
-    // does not directly call fprintf, but calls into the
-    // host and calls fprintf from there. This is because
-    // the fprintf function is not part of the enclave
-    // as it requires support from the kernel.
     fprintf(stdout, "Hello world from the enclave\n");
 
-    // Call back into the host
-    oe_result_t result = host_helloworld();
-    if (result != OE_OK)
-    {
-        fprintf(
-            stderr,
-            "Call to host_helloworld failed: result=%u (%s)\n",
-            result,
-            oe_result_str(result));
-    }
+    double my_res = 0;
+    volatile double my_num = 0.12345678899;
+
+    asm("fldl %1\n\t"
+        "fadd %%st, %%st\n\t"
+        "fstl %0\n\t"
+        : "=m"(my_res) : "m"(my_num) :
+    );
+
+    return my_res;
 }
diff --git a/samples/helloworld/helloworld.edl b/samples/helloworld/helloworld.edl
index c936ef9ff..78c066196 100644
--- a/samples/helloworld/helloworld.edl
+++ b/samples/helloworld/helloworld.edl
@@ -7,7 +7,7 @@ enclave {
     from "platform.edl" import *;
 
     trusted {
-        public void enclave_helloworld();
+        public double enclave_helloworld();
     };
 
     untrusted {
diff --git a/samples/helloworld/host/host.c b/samples/helloworld/host/host.c
index 0085973c3..ef983f5c1 100644
--- a/samples/helloworld/host/host.c
+++ b/samples/helloworld/host/host.c
@@ -41,6 +41,11 @@ int main(int argc, const char* argv[])
     if (check_simulate_opt(&argc, argv))
     {
         flags |= OE_ENCLAVE_FLAG_SIMULATE;
+        fprintf(stdout, "Running in sim mode\n");
+    }
+    else
+    {
+     	fprintf(stdout, "Running in HW mode\n");
     }
 
     if (argc != 2)
@@ -64,7 +69,18 @@ int main(int argc, const char* argv[])
     }
 
     // Call into the enclave
-    result = enclave_helloworld(enclave);
+    double res = 0;
+
+    #define DO_POISON
+    
+    #ifdef DO_POISON
+    uint64_t dummy = 0;
+    asm("movq %0, %%mm0\n\t"
+        "paddd %%mm0, %%mm0\n\t"
+        :: "m"(dummy) : );
+    #endif 
+
+    result = enclave_helloworld(enclave, &res);
     if (result != OE_OK)
     {
         fprintf(
@@ -75,6 +91,8 @@ int main(int argc, const char* argv[])
         goto exit;
     }
 
+   fprintf(stdout, "Result = %f\n", res);
+
     ret = 0;
 
 exit:
