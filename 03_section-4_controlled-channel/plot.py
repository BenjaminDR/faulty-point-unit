#!/usr/bin/python3

import argparse
import csv
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc

def parse_args():
  parser = argparse.ArgumentParser(description="SGX Floats Evaluation script")
  parser.add_argument(
      "-f", "--file",
      type=str, required=False, default="paper_data.csv",
      help="CSV file to use for the plot. Generated by the binary_search script",
  )

  return parser.parse_args()

  

data = []

def plot_loghist(x, bins):
  hist, bins = np.histogram(x, bins=bins)
  logbins = np.logspace(np.log10(bins[0]),np.log10(bins[-1]),len(bins))
  plt.figure(figsize=(6, 1.5))
  plt.hist(x, bins=logbins)
  plt.xscale('log')
  plt.xlabel("Error")
  plt.ylabel("Count")
  plt.yticks([0, 25, 50])
  plt.savefig('histogram_error.pdf', format="pdf", bbox_inches = 'tight')

def main():
  args = parse_args()

  with open(args.file, newline='') as csv_file:
    csv_reader = csv.reader(csv_file, delimiter=';')
    next(csv_reader) #ignore header
    for lines in csv_reader:
      # print(lines[2])
      data.append(float(lines[2]))

  rc('text', usetex=True)
  rc("font",family="serif", size="16")
  rc("axes", labelsize="16")

  plot_loghist(data, 100)
  print("Generated plot as histogram_error.pdf")


if __name__ == '__main__':
    main()

